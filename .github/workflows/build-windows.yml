---
name: Build - Windows

on:
  pull_request:
  push:
    branches:
      - master
      - dev
      - devel
      - develop

env:
  VCPKG_BUILD_TYPE: release
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        buildtype: [Release, Debug, RelWithDebInfo]
        include:
          - os: windows-2019
            triplet: x64-windows
            packages: >
              boost-asio boost-iostreams boost-system boost-filesystem
              boost-variant boost-lockfree cryptopp curl jsoncpp
              luajit libmariadb pugixml spdlog
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Remove Windows pre-installed MySQL
        run: rm -r -fo C:/mysql-5.7.21-winx64
        if: contains( matrix.os, 'windows')

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          additionalCachedPaths: ${{ github.workspace }}/build/vcpkg_installed
          vcpkgGitCommitId: b9cd2a7958dec657fb869ec487d2a98cf39a8d48

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Run CMake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          useVcpkgToolchainFile: true
          buildDirectory: ${{ github.workspace }}/build
          cmakeBuildType: ${{ matrix.buildtype }}

      - name: Copy artifacts
        shell: pwsh
        run: |
          Copy-Item -Path ${{ github.workspace }}\build\bin\* -Destination ${{ github.workspace }} -Recurse
          
      - name: Create and Upload Full Datapack
        uses: actions/upload-artifact@v2
        with:
          name: otbr-full-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/build/
            !${{ github.workspace }}/vcpkg/
            !${{ github.workspace }}/.git/
            !${{ github.workspace }}/.github/
            !${{ github.workspace }}/.appveyor.yml
            !${{ github.workspace }}/.editorconfig
            !${{ github.workspace }}/.gitignore
            !${{ github.workspace }}/.reviewdog.yml
            !${{ github.workspace }}/.travis.yml
            !${{ github.workspace }}/tests/
            !${{ github.workspace }}/cmake/
            !${{ github.workspace }}/sonar-project.properties
            !${{ github.workspace }}/Jenkinsfile
            
      - name: Create and Upload Server Only
        uses: actions/upload-artifact@v2
        with:
          name: otbr-server-only-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/build/bin/
